
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_auto_examples/first_steps_create_datacube.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download__auto_examples_first_steps_create_datacube.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__auto_examples_first_steps_create_datacube.py:


First steps to create a datacube
===============================================================

To create a datacube using Earth Data Store from EarthDaily you have two possibilities.

The first one is the more classic one, you request items, then you build your datacube, and then you can mask pixels using a cloudmask asset.
The second one is the most turnkey one, the one we recommend, it allows to do all the process at once.

.. GENERATED FROM PYTHON SOURCE LINES 13-15

Import librairies
-------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 15-20

.. code-block:: Python


    from earthdaily import earthdatastore, datasets
    import geopandas as gpd
    from matplotlib import pyplot as plt








.. GENERATED FROM PYTHON SOURCE LINES 21-22

Loading geometry

.. GENERATED FROM PYTHON SOURCE LINES 22-25

.. code-block:: Python


    geometry = datasets.load_pivot()








.. GENERATED FROM PYTHON SOURCE LINES 26-27

Init earthdaily and check available assets

.. GENERATED FROM PYTHON SOURCE LINES 27-30

.. code-block:: Python


    eds = earthdatastore.Auth()  # using config from ENV








.. GENERATED FROM PYTHON SOURCE LINES 31-33

Create datacube (in one step)
--------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 33-49

.. code-block:: Python


    s2_datacube = eds.datacube(
        "sentinel-2-l2a",
        assets=["blue", "green", "red", "nir"],
        intersects=geometry,
        datetime=["2022-08-01", "2022-08-09"],
        mask_with="native",  # equal to "scl" for sentinel-2
        clear_cover=50,
    )

    s2_datacube.clear_percent.plot.scatter(x="time")
    plt.title("Percentage of clear pixels on the study site")
    plt.show()

    s2_datacube.ed.plot_rgb(vmin=0, vmax=0.2, col="time", col_wrap=4)




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /_auto_examples/images/sphx_glr_first_steps_create_datacube_001.png
         :alt: Percentage of clear pixels on the study site
         :srcset: /_auto_examples/images/sphx_glr_first_steps_create_datacube_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /_auto_examples/images/sphx_glr_first_steps_create_datacube_002.png
         :alt: time = 2022-08-02, time = 2022-08-05, time = 2022-08-07
         :srcset: /_auto_examples/images/sphx_glr_first_steps_create_datacube_002.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <xarray.plot.facetgrid.FacetGrid object at 0x7f99878b6990>



.. GENERATED FROM PYTHON SOURCE LINES 50-52

Create datacube in three steps
--------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 54-55

Request items

.. GENERATED FROM PYTHON SOURCE LINES 55-62

.. code-block:: Python


    items = eds.search(
        "sentinel-2-l2a",
        intersects=geometry,
        datetime=["2022-08-01", "2022-08-09"],
    )








.. GENERATED FROM PYTHON SOURCE LINES 63-65

Creata datacube (independent from being log into earthdatastore)
We request the "scl" assets which is the native cloudmask

.. GENERATED FROM PYTHON SOURCE LINES 65-70

.. code-block:: Python


    s2_datacube = earthdatastore.datacube(
        items, assets=["blue", "green", "red", "nir", "scl"], intersects=geometry
    )








.. GENERATED FROM PYTHON SOURCE LINES 71-72

Mask datacube

.. GENERATED FROM PYTHON SOURCE LINES 72-86

.. code-block:: Python


    # intersects or bbox are asked in order to compute accurate mask statistics

    s2_datacube = earthdatastore.mask.Mask(s2_datacube, intersects=geometry).scl(
        mask_statistics=True
    )

    s2_datacube = earthdatastore.mask.filter_clear_cover(
        s2_datacube, 50
    )  # at least 50% of clear pixels
    #
    s2_datacube.ed.plot_rgb(
        vmin=0, vmax=0.2, col="time", col_wrap=4
    )



.. image-sg:: /_auto_examples/images/sphx_glr_first_steps_create_datacube_003.png
   :alt: time = 2022-08-02, time = 2022-08-05, time = 2022-08-07
   :srcset: /_auto_examples/images/sphx_glr_first_steps_create_datacube_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <xarray.plot.facetgrid.FacetGrid object at 0x7f9987947a10>




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 11.177 seconds)


.. _sphx_glr_download__auto_examples_first_steps_create_datacube.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: first_steps_create_datacube.ipynb <first_steps_create_datacube.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: first_steps_create_datacube.py <first_steps_create_datacube.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
